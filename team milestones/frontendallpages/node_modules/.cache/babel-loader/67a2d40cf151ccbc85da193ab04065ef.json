{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Astrolabs\\\\team3_finalAssignment\\\\team3_final-project\\\\team milestones\\\\frontendallpages\\\\src\\\\FP_RegistrationScreen.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FP_RegistrationScreen() {\n  _s();\n\n  // formState: (1) initial, (2) loading, (3) validationFailed, (4) successful, (5) unsuccessful\n  const [formState, setFormState] = useState(\"initial\");\n  let firstNameField;\n  let lastNameField;\n  let emailField;\n  let passwordField;\n  let phoneField;\n  let checkBox;\n  let avatarInput; // FormData is a constructor for creating an object\n  // that works like an HTML form element\n\n  const formData = new FormData(); // errorsState is for tracking the validation errors\n\n  const [errorsState, setErrorsState] = useState([]); // attachFile() will append to formData the avatar file\n\n  const attachFile = evt => {\n    // Create an array from the file attachments\n    const files = Array.from(evt.target.files); // For each attachment, append the file to formData\n\n    files.forEach((fileAttachment, index) => {\n      formData.append(index, fileAttachment);\n    });\n  };\n\n  function registerUser() {\n    const errors = []; // 1. Validate all of the required fields\n\n    if (firstNameField.value.length === 0) {\n      errors.push(\"Please enter your first name\");\n    }\n\n    if (lastNameField.value.length === 0) {\n      errors.push(\"Please enter your last name\");\n    }\n\n    if (emailField.value.length === 0) {\n      errors.push(\"Please enter valid email\");\n    }\n\n    if (passwordField.value.length === 0) {\n      errors.push(\"Please enter valid password\");\n    }\n\n    if (checkBox.checked === false) {\n      errors.push(\"Please accept the terms & conditions\");\n    } // 1.1 If there are errors, set the state to \"validationFailed\"\n\n\n    if (errors.length > 0) {\n      setFormState(\"validationFailed\");\n      setErrorsState(errors);\n    } // 1.2 If there are no errors, set the state to \"loading\"\n    else {\n      setFormState(\"loading\");\n      setErrorsState([]);\n      formData.append('firstName', firstNameField.value);\n      formData.append('lastName', lastNameField.value);\n      formData.append('email', emailField.value);\n      formData.append('password', passwordField.value);\n      formData.append('phoneNumber', phoneField.value);\n      fetch(`${process.env.REACT_APP_BACKEND}/user/register`, {\n        method: 'POST',\n        body: formData\n      }) // The .json() method will convert a 'stringified' object to a JavaScript object\n      .then(backendResponseJson => backendResponseJson.json()) // 2.1 If the submission is successful, set state to \"successful\"\n      .then(backendResponse => {\n        console.log(backendResponse.status);\n\n        if (backendResponse.status === \"ok\") {\n          setFormState(\"successful\");\n        } else {\n          setFormState(\"unsuccessful\");\n        }\n      }) // 2.2 If the submission is successful, set state to \"unsucessful\"\n      .catch(err => {\n        console.log(err);\n        setFormState(\"unsuccessful\");\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"registration-bg\",\n    className: \"py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container border border-5 border-secondary\",\n      style: {\n        \"margin-top\": \"0em\",\n        \"max-width\": \"35em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your firstname *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (theInputElement) {\n          firstNameField = theInputElement;\n        },\n        className: \"field form-control\",\n        name: \"firstName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your lastname *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          lastNameField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"lastName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your email *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          emailField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"email\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter a password *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          passwordField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"password\",\n        autocomplete: \"off\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter your phone (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          phoneField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"phone\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload your profile picture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: element => {\n          avatarInput = element;\n        },\n        onChange: attachFile,\n        className: \"field form-control\",\n        id: \"photo\",\n        name: \"file\",\n        type: \"file\",\n        multiple: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Do you agree to terms & conditions? *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisCheckbox) {\n          checkBox = thisCheckbox;\n        },\n        className: \"checkbox\",\n        name: \"termsConditions\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }, this), \" Yes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 18\n      }, this), formState !== \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: registerUser,\n          className: \"btn btn-primary\",\n          style: {\n            \"padding\": \"10px\",\n            \"font-size\": \"16px\"\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), formState === \"validationFailed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: errorsState.map(error => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 44\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), formState === \"successful\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: \"You have a successfully created an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), formState === \"unsuccessful\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: \"An error occured. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), formState === \"loading\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FP_RegistrationScreen, \"GaXe1Sh1x1GchEYEDFsx1DKIU7E=\");\n\n_c = FP_RegistrationScreen;\nexport default FP_RegistrationScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"FP_RegistrationScreen\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Astrolabs/team3_finalAssignment/team3_final-project/team milestones/frontendallpages/src/FP_RegistrationScreen.js"],"names":["useState","FP_RegistrationScreen","formState","setFormState","firstNameField","lastNameField","emailField","passwordField","phoneField","checkBox","avatarInput","formData","FormData","errorsState","setErrorsState","attachFile","evt","files","Array","from","target","forEach","fileAttachment","index","append","registerUser","errors","value","length","push","checked","fetch","process","env","REACT_APP_BACKEND","method","body","then","backendResponseJson","json","backendResponse","console","log","status","catch","err","theInputElement","thisInputField","element","thisCheckbox","map","error"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction FP_RegistrationScreen(){\r\n\r\n     // formState: (1) initial, (2) loading, (3) validationFailed, (4) successful, (5) unsuccessful\r\n    const [formState,setFormState] = useState(\"initial\"); \r\n\r\n            let firstNameField;\r\n            let lastNameField;\r\n            let emailField;\r\n            let passwordField;\r\n            let phoneField;\r\n            let checkBox;\r\n            let avatarInput;\r\n\r\n        // FormData is a constructor for creating an object\r\n        // that works like an HTML form element\r\n        const formData = new FormData();\r\n\r\n        // errorsState is for tracking the validation errors\r\n        const [errorsState, setErrorsState] = useState([]);\r\n\r\n        // attachFile() will append to formData the avatar file\r\n        const attachFile = (evt) => {\r\n        // Create an array from the file attachments\r\n        const files = Array.from(evt.target.files);\r\n\r\n        // For each attachment, append the file to formData\r\n        files.forEach(\r\n            (fileAttachment, index) => {\r\n                formData.append(index, fileAttachment);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    function registerUser(){\r\n        const errors = [];\r\n        \r\n        // 1. Validate all of the required fields\r\n        if( firstNameField.value.length === 0 ) {\r\n            errors.push(\"Please enter your first name\");\r\n        }\r\n        if( lastNameField.value.length === 0 ) {\r\n            errors.push(\"Please enter your last name\");\r\n        }\r\n        if( emailField.value.length === 0 ) {\r\n            errors.push(\"Please enter valid email\");\r\n        }\r\n        if( passwordField.value.length === 0 ) {\r\n            errors.push(\"Please enter valid password\");\r\n        }\r\n        if( checkBox.checked === false ) {\r\n            errors.push(\"Please accept the terms & conditions\");\r\n        }\r\n\r\n        // 1.1 If there are errors, set the state to \"validationFailed\"\r\n        if(errors.length > 0) {\r\n            setFormState(\"validationFailed\");\r\n            setErrorsState(errors);\r\n        }\r\n\r\n        // 1.2 If there are no errors, set the state to \"loading\"\r\n        else {\r\n            setFormState(\"loading\");\r\n            setErrorsState([]);\r\n           \r\n            \r\n            formData.append('firstName', firstNameField.value);\r\n            formData.append('lastName', lastNameField.value);\r\n            formData.append('email', emailField.value);\r\n            formData.append('password', passwordField.value);\r\n            formData.append('phoneNumber', phoneField.value);\r\n\r\n            fetch(\r\n                `${process.env.REACT_APP_BACKEND}/user/register`,\r\n                {\r\n                    method: 'POST',\r\n                    body: formData\r\n                }\r\n            )\r\n            // The .json() method will convert a 'stringified' object to a JavaScript object\r\n            .then(\r\n                (backendResponseJson) => backendResponseJson.json()\r\n            )\r\n             // 2.1 If the submission is successful, set state to \"successful\"\r\n            .then(\r\n                (backendResponse) => {\r\n                    console.log(backendResponse.status);\r\n                    if (backendResponse.status === \"ok\") {\r\n                        setFormState(\"successful\");\r\n                    } else {\r\n                        setFormState(\"unsuccessful\");\r\n                    }\r\n                }\r\n            )\r\n            // 2.2 If the submission is successful, set state to \"unsucessful\"\r\n            .catch(\r\n                (err) => {\r\n                    console.log(err);\r\n                    setFormState(\"unsuccessful\");\r\n                }\r\n            );\r\n        }\r\n    }\r\n    return(\r\n        <div id=\"registration-bg\" className=\"py-5\">\r\n        <div className=\"container border border-5 border-secondary\" style={{\"margin-top\": \"0em\", \"max-width\": \"35em\"}}>\r\n            \r\n            <h1>Sign Up</h1>\r\n            <br/>\r\n\r\n            <label>Enter your firstname *</label>\r\n            <input ref={\r\n                function(theInputElement) {\r\n                    firstNameField = theInputElement;\r\n                }\r\n            }className=\"field form-control\" name=\"firstName\" type=\"text\" />\r\n\r\n            <label>Enter your lastname *</label>\r\n            <input ref={\r\n                function(thisInputField) {\r\n                    lastNameField = thisInputField;\r\n                }\r\n            } className=\"field form-control\" name=\"lastName\" type=\"text\" />\r\n\r\n            <label>Enter your email *</label>\r\n            <input ref={\r\n                function(thisInputField) {\r\n                    emailField = thisInputField\r\n                }\r\n            }className=\"field form-control\" name=\"email\" type=\"text\" />\r\n\r\n            <label>Enter a password *</label>\r\n            <input ref={\r\n                function(thisInputField) {\r\n                    passwordField = thisInputField\r\n                }\r\n            }className=\"field form-control\" name=\"password\" autocomplete=\"off\" type=\"password\" />\r\n\r\n            <label>Enter your phone (optional)</label>\r\n            <input ref={\r\n                function(thisInputField) {\r\n                    phoneField = thisInputField\r\n                }\r\n            }className=\"field form-control\" name=\"phone\" type=\"text\" />\r\n\r\n            <br/><br/>\r\n\r\n            <label>Upload your profile picture</label>\r\n            <input ref={(element)=>{ avatarInput = element}} \r\n            onChange={attachFile} className=\"field form-control\" id=\"photo\" name=\"file\" type=\"file\" multiple=\"multiple\"/>\r\n\r\n            <br/><br/>\r\n\r\n            <label>Do you agree to terms &amp; conditions? *</label>\r\n            <input ref={\r\n                function(thisCheckbox) {\r\n                    checkBox = thisCheckbox;\r\n                }\r\n            }className=\"checkbox\" name=\"termsConditions\" type=\"checkbox\" /> Yes\r\n\r\n            <br/><br/>\r\n\r\n            \r\n            {\r\n                formState !== \"loading\" &&\r\n                <div>\r\n                    <button \r\n                    onClick={registerUser}\r\n                    className=\"btn btn-primary\"\r\n                    style={{\"padding\": \"10px\", \"font-size\": \"16px\"}}>\r\n                        Submit\r\n                    </button><br/><br/>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                formState === \"validationFailed\" &&\r\n                <div className=\"alert alert-danger\">\r\n\r\n                    <ul>\r\n                        {\r\n                            errorsState.map(\r\n                                (error) => {\r\n                                    return <li>{error}</li>\r\n                                }\r\n                            )\r\n                        }\r\n                    </ul>\r\n\r\n                </div>\r\n            }\r\n\r\n{\r\n                formState === \"successful\" &&\r\n                <div className=\"alert alert-success\">You have a successfully created an account</div>\r\n            }\r\n\r\n            {\r\n                formState === \"unsuccessful\" &&\r\n                <div className=\"alert alert-danger\">An error occured. Please try again.</div>\r\n            }\r\n\r\n            {\r\n                formState === \"loading\" &&\r\n                <p>Loading...</p>\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FP_RegistrationScreen;"]},"metadata":{},"sourceType":"module"}