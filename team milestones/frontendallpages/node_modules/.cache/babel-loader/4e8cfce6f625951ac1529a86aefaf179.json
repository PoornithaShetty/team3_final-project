{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Astrolabs\\\\team3_finalAssignment\\\\team3_final-project\\\\team milestones\\\\frontendallpages\\\\src\\\\Seller_AddProduct.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Seller_AddProduct() {\n  _s();\n\n  // formState: (1) initial, (2) loading, (3) validationFailed, (4) successful, (5) unsuccessful\n  const [formState, setFormState] = useState(\"initial\");\n  let productNameField;\n  let productDescriptionField;\n  let productPriceField;\n  let productStockField;\n  let productCategoryField;\n  let checkBox;\n  let avatarInput; // FormData is a constructor for creating an object\n  // that works like an HTML form element\n\n  const formData = new FormData(); // errorsState is for tracking the validation errors\n\n  const [errorsState, setErrorsState] = useState([]); // attachFile() will append to formData the avatar file\n\n  const attachFile = evt => {\n    // Create an array from the file attachments\n    const files = Array.from(evt.target.files); // For each attachment, append the file to formData\n\n    files.forEach((fileAttachment, index) => {\n      formData.append(index, fileAttachment);\n    });\n  };\n\n  function createProduct() {\n    const errors = []; // 1. Validate all of the required fields\n\n    if (productNameField.value.length === 0) {\n      errors.push(\"Please enter your product name\");\n    }\n\n    if (productDescriptionField.value.length === 0) {\n      errors.push(\"Please enter your Product Description\");\n    }\n\n    if (productPriceField.value.length === 0) {\n      errors.push(\"Please enter product price\");\n    }\n\n    if (productStockField.value.length === 0) {\n      errors.push(\"Please enter product stock value\");\n    }\n\n    if (checkBox.checked === false) {\n      errors.push(\"Please accept the terms & conditions\");\n    } // 1.1 If there are errors, set the state to \"validationFailed\"\n\n\n    if (errors.length > 0) {\n      setFormState(\"validationFailed\");\n      setErrorsState(errors);\n    } // 1.2 If there are no errors, set the state to \"loading\"\n    else {\n      setFormState(\"loading\");\n      setErrorsState([]);\n      formData.append('productName', productNameField.value);\n      formData.append('productDescription', productDescriptionField.value);\n      formData.append('productPrice', productPriceField.value);\n      formData.append('productStock', productStockField.value);\n      formData.append('productCategory', productCategoryField.value);\n      fetch(`${process.env.REACT_APP_BACKEND}/product/productadd`, {\n        method: 'POST',\n        body: formData\n      }) // The .json() method will convert a 'stringified' object to a JavaScript object\n      .then(backendResponseJson => backendResponseJson.json()) // 2.1 If the submission is successful, set state to \"successful\"\n      .then(backendResponse => {\n        console.log(backendResponse.status);\n\n        if (backendResponse.status === \"ok\") {\n          setFormState(\"successful\");\n        } else {\n          setFormState(\"unsuccessful\");\n        }\n      }) // 2.2 If the submission is successful, set state to \"unsucessful\"\n      .catch(err => {\n        console.log(err);\n        setFormState(\"unsuccessful\");\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"sellerproductadd-bg\",\n    className: \"py-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container border border-5 border-secondary\",\n      style: {\n        \"margin-top\": \"0em\",\n        \"max-width\": \"35em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Product Name *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (theInputElement) {\n          productNameField = theInputElement;\n        },\n        className: \"field form-control\",\n        name: \"productName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Product Description *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          productDescriptionField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"productDescription\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Product Price *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          productPriceField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"productPrice\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter Product stock *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisInputField) {\n          productStockField = thisInputField;\n        },\n        className: \"field form-control\",\n        name: \"productStock\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          ref: function (thisInputField) {\n            productCategoryField = thisInputField;\n          },\n          className: \"form-select\",\n          id: \"inputGroupSelect04\",\n          \"aria-label\": \"Example select with button addon\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            children: \"Choose Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"Home Decor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Painting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload product Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: element => {\n          avatarInput = element;\n        },\n        onChange: attachFile,\n        className: \"field form-control\",\n        id: \"photo\",\n        name: \"file\",\n        type: \"file\",\n        multiple: \"multiple\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Do you agree to terms & conditions? *\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: function (thisCheckbox) {\n          checkBox = thisCheckbox;\n        },\n        className: \"checkbox\",\n        name: \"termsConditions\",\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this), \" Yes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 18\n      }, this), formState !== \"loading\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createProduct,\n          className: \"btn btn-primary\",\n          style: {\n            \"padding\": \"10px\",\n            \"font-size\": \"16px\"\n          },\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), formState === \"validationFailed\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: errorsState.map(error => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 44\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), formState === \"successful\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: \"Your product has been added successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), formState === \"unsuccessful\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        children: \"An error occured. Please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), formState === \"loading\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Seller_AddProduct, \"GaXe1Sh1x1GchEYEDFsx1DKIU7E=\");\n\n_c = Seller_AddProduct;\nexport default Seller_AddProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"Seller_AddProduct\");","map":{"version":3,"sources":["C:/Users/Dell/Desktop/Astrolabs/team3_finalAssignment/team3_final-project/team milestones/frontendallpages/src/Seller_AddProduct.js"],"names":["useState","Seller_AddProduct","formState","setFormState","productNameField","productDescriptionField","productPriceField","productStockField","productCategoryField","checkBox","avatarInput","formData","FormData","errorsState","setErrorsState","attachFile","evt","files","Array","from","target","forEach","fileAttachment","index","append","createProduct","errors","value","length","push","checked","fetch","process","env","REACT_APP_BACKEND","method","body","then","backendResponseJson","json","backendResponse","console","log","status","catch","err","theInputElement","thisInputField","element","thisCheckbox","map","error"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction Seller_AddProduct(){\r\n\r\n     // formState: (1) initial, (2) loading, (3) validationFailed, (4) successful, (5) unsuccessful\r\n    const [formState,setFormState] = useState(\"initial\"); \r\n\r\n            let productNameField;\r\n            let productDescriptionField;\r\n            let productPriceField;\r\n            let productStockField;\r\n            let productCategoryField;\r\n            let checkBox;\r\n            let avatarInput;\r\n\r\n        // FormData is a constructor for creating an object\r\n        // that works like an HTML form element\r\n        const formData = new FormData();\r\n\r\n        // errorsState is for tracking the validation errors\r\n        const [errorsState, setErrorsState] = useState([]);\r\n\r\n        // attachFile() will append to formData the avatar file\r\n        const attachFile = (evt) => {\r\n        // Create an array from the file attachments\r\n        const files = Array.from(evt.target.files);\r\n\r\n        // For each attachment, append the file to formData\r\n        files.forEach(\r\n            (fileAttachment, index) => {\r\n                formData.append(index, fileAttachment);\r\n            }\r\n        );\r\n    }\r\n\r\n\r\n    function createProduct(){\r\n        const errors = [];\r\n        \r\n        // 1. Validate all of the required fields\r\n        if( productNameField.value.length === 0 ) {\r\n            errors.push(\"Please enter your product name\");\r\n        }\r\n        if( productDescriptionField.value.length === 0 ) {\r\n            errors.push(\"Please enter your Product Description\");\r\n        }\r\n        if( productPriceField.value.length === 0 ) {\r\n            errors.push(\"Please enter product price\");\r\n        }\r\n        if( productStockField.value.length === 0 ) {\r\n            errors.push(\"Please enter product stock value\");\r\n        }\r\n        if( checkBox.checked === false ) {\r\n            errors.push(\"Please accept the terms & conditions\");\r\n        }\r\n\r\n        // 1.1 If there are errors, set the state to \"validationFailed\"\r\n        if(errors.length > 0) {\r\n            setFormState(\"validationFailed\");\r\n            setErrorsState(errors);\r\n        }\r\n\r\n        // 1.2 If there are no errors, set the state to \"loading\"\r\n        else {\r\n            setFormState(\"loading\");\r\n            setErrorsState([]);\r\n           \r\n            \r\n            formData.append('productName', productNameField.value);\r\n            formData.append('productDescription', productDescriptionField.value);\r\n            formData.append('productPrice', productPriceField.value);\r\n            formData.append('productStock', productStockField.value);\r\n            formData.append('productCategory', productCategoryField.value);\r\n\r\n            fetch(\r\n                `${process.env.REACT_APP_BACKEND}/product/productadd`,\r\n                {\r\n                    method: 'POST',\r\n                    body: formData\r\n                }\r\n            )\r\n            // The .json() method will convert a 'stringified' object to a JavaScript object\r\n            .then(\r\n                (backendResponseJson) => backendResponseJson.json()\r\n            )\r\n             // 2.1 If the submission is successful, set state to \"successful\"\r\n            .then(\r\n                (backendResponse) => {\r\n                    console.log(backendResponse.status);\r\n                    if (backendResponse.status === \"ok\") {\r\n                        setFormState(\"successful\");\r\n                    } else {\r\n                        setFormState(\"unsuccessful\");\r\n                    }\r\n                }\r\n            )\r\n            // 2.2 If the submission is successful, set state to \"unsucessful\"\r\n            .catch(\r\n                (err) => {\r\n                    console.log(err);\r\n                    setFormState(\"unsuccessful\");\r\n                }\r\n            );\r\n        }\r\n    }\r\n    return(\r\n        <div id=\"sellerproductadd-bg\" className=\"py-5\">\r\n        <div className=\"container border border-5 border-secondary\" style={{\"margin-top\": \"0em\", \"max-width\": \"35em\"}}>\r\n            \r\n            <h1>Add Product</h1>\r\n            <br/>\r\n\r\n            <label>Enter Product Name *</label>\r\n            <input ref={\r\n                function(theInputElement) {\r\n                    productNameField = theInputElement;\r\n                }\r\n            }className=\"field form-control\" name=\"productName\" type=\"text\" />\r\n\r\n            <label>Enter Product Description *</label>\r\n            <input ref={\r\n                function(thisInputField) {\r\n                    productDescriptionField = thisInputField;\r\n                }\r\n            } className=\"field form-control\" name=\"productDescription\" type=\"text\" />\r\n\r\n            <label>Enter Product Price *</label>\r\n            <input ref={\r\n                function(thisInputField) {\r\n                    productPriceField = thisInputField\r\n                }\r\n            }className=\"field form-control\" name=\"productPrice\" type=\"text\" />\r\n\r\n            <label>Enter Product stock *</label>\r\n            <input ref={\r\n                function(thisInputField) {\r\n                    productStockField = thisInputField\r\n                }\r\n            }className=\"field form-control\" name=\"productStock\"  type=\"text\" />\r\n\r\n            {/* <label>Enter Product Category </label>\r\n            <input ref={\r\n                function(thisInputField) {\r\n                    productCategoryField = thisInputField\r\n                }\r\n            }className=\"field form-control\" name=\"productCategory\" type=\"text\" /> */}\r\n            <br/>\r\n            <div className=\"input-group\">\r\n            <select ref={\r\n                function(thisInputField) {\r\n                    productCategoryField = thisInputField\r\n                }\r\n            } className=\"form-select\" id=\"inputGroupSelect04\" aria-label=\"Example select with button addon\">\r\n                <option selected>Choose Category</option>\r\n                <option value=\"1\">Home Decor</option>\r\n                <option value=\"2\">Painting</option>\r\n            </select>\r\n            </div>\r\n            <br/><br/>\r\n\r\n            <label>Upload product Image</label>\r\n            <input ref={(element)=>{ avatarInput = element}} \r\n            onChange={attachFile} className=\"field form-control\" id=\"photo\" name=\"file\" type=\"file\" multiple=\"multiple\"/>\r\n\r\n            <br/><br/>\r\n\r\n            <label>Do you agree to terms &amp; conditions? *</label>\r\n            <input ref={\r\n                function(thisCheckbox) {\r\n                    checkBox = thisCheckbox;\r\n                }\r\n            }className=\"checkbox\" name=\"termsConditions\" type=\"checkbox\" /> Yes\r\n\r\n            <br/><br/>\r\n\r\n            \r\n            {\r\n                formState !== \"loading\" &&\r\n                <div>\r\n                    <button \r\n                    onClick={createProduct}\r\n                    className=\"btn btn-primary\"\r\n                    style={{\"padding\": \"10px\", \"font-size\": \"16px\"}}>\r\n                        Add Product\r\n                    </button><br/><br/>\r\n                </div>\r\n            }\r\n\r\n            {\r\n                formState === \"validationFailed\" &&\r\n                <div className=\"alert alert-danger\">\r\n\r\n                    <ul>\r\n                        {\r\n                            errorsState.map(\r\n                                (error) => {\r\n                                    return <li>{error}</li>\r\n                                }\r\n                            )\r\n                        }\r\n                    </ul>\r\n\r\n                </div>\r\n            }\r\n\r\n{\r\n                formState === \"successful\" &&\r\n                <div className=\"alert alert-success\">Your product has been added successfully</div>\r\n            }\r\n\r\n            {\r\n                formState === \"unsuccessful\" &&\r\n                <div className=\"alert alert-danger\">An error occured. Please try again.</div>\r\n            }\r\n\r\n            {\r\n                formState === \"loading\" &&\r\n                <p>Loading...</p>\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Seller_AddProduct;"]},"metadata":{},"sourceType":"module"}